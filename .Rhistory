}
})
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)]
print(last_word)
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '(\\s+)?', as.integer(i), '$'))]
print(toc_index)
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)]
print(last_word)
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
print(toc_index)
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
str_replace('meh)', ')', '\\)')
str_replace('meh)', '\\)', '\\\\)')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)] %>% str_replace('\\)', '\\\\)')
print(last_word)
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
print(toc_index)
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
?regex
str_replace('meh)', '[:punct:]', '')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)] %>% str_replace('[:punct:]', '')
print(last_word)
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
print(toc_index)
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
str_replace('meh)', '[:punct:]', '')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)] %>% str_replace_all('[:punct:]', '')
print(last_word)
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
print(toc_index)
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
toc_authors
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist()
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_split(x, ' ') %>% unlist %>% .[length(.)] %>% str_replace_all('[:punct:]', '')
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
title_info <- title_info %>% mutate(authors = toc_authors)
title_info
title_info %>% unnest
title_info %>% unnest %>% filter(authors %>% is.na)
text[4:5] %>% cat
text[6] %>% cat
?str_detect
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist()
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', '') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
title_info <- title_info %>% mutate(authors = toc_authors)
title_info %>% unnest %>% filter(authors %>% is.na)
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', ' ') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist()
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', ' ') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '.+\\b', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
title_info <- title_info %>% mutate(authors = toc_authors)
title_info %>% unnest %>% filter(authors %>% is.na)
title_info$authors
title_info[71,]
title_info[71,]$pageBody
title_info[71,]$pageBody %>% cat
text[6]
text[7]
text[8]
text[9]
text[9] %>% cat
title_info <- title_info %>% mutate(authors = toc_authors) %>% unnest()
title_info$authors
text[4] %>% cat
text[5] %>% cat
toc_authors
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist()
toc_authors
toc_authors %>% str_replace_all('( \\.)+', ' ')
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist() %>%
str_replace_all('( \\.)+', ' ')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', ' ') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '\\s+', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1]
} else {
NA
}
})
toc_authors
title_info[15:24,]
title_info <- lapply(toc$children, function(x){
talk_type = x$title
lapply(x$children, function(y){
sub_type = y$title
lapply(y$children, function(z){
tibble(title = z$title)
}) %>%
bind_rows() %>%
mutate(sub_type = sub_type)
}) %>%
bind_rows() %>%
mutate(talk_type = talk_type,
pageNumber = map2((1:nrow(.)), talk_type, function(i, x){
switch(x,
"Invited speakers" = i + 18,
"Oral Presentation" = i + 25,
"Lightning Talks" = i + 151,
"Posters" = i + 166,
"Sponsor Session" = 244 + i)
}) %>% unlist,
pageBody = map2_chr(pageNumber, title, function(i, x){
pBody <- text[i+1] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_replace('^Chair:[^\\n]+\\n', '')})
)
}) %>%
bind_rows
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist() %>%
str_replace_all('( \\.)+', ' ')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', ' ') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '\\s+', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1] %>% .[length(.)]
} else {
NA
}
})
toc_authors
title_info <- title_info %>% mutate(authors = toc_authors) %>% unnest()
title_info
title_info[71,]
title_info[71,]$authors
title_info[71,]$pageBody %>% cat
title_info[71,]$authors <- 'Marvin Steijaert, Vladimir Chupakhin, Hugo Ceulemans, Joerg Wegner'
names(title_info)
title_info$authors
title_info$pageBody %>% head %>% cat
title_info$pageBody %>% .[sample(length(.), 4)] %>% cat
title_info$pageBody %>% .[sample(length(.), 4)]
title_info$pageBody %>% .[sample(length(.), 4)]
title_info <- lapply(toc$children, function(x){
talk_type = x$title
lapply(x$children, function(y){
sub_type = y$title
lapply(y$children, function(z){
tibble(title = z$title)
}) %>%
bind_rows() %>%
mutate(sub_type = sub_type)
}) %>%
bind_rows() %>%
mutate(talk_type = talk_type,
pageNumber = map2((1:nrow(.)), talk_type, function(i, x){
switch(x,
"Invited speakers" = i + 18,
"Oral Presentation" = i + 25,
"Lightning Talks" = i + 151,
"Posters" = i + 166,
"Sponsor Session" = 244 + i)
}) %>% unlist,
pageBody = map2_chr(pageNumber, title, function(i, x){
pBody <- text[i+1] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_replace('^Chair:[^\\n]+\\n', '')}),
keywords = sapply(pageBody %>% str_replace_all('\\n', ' '), str_extract('(?<=Keywords:).+$'))
)
}) %>%
bind_rows
title_info <- lapply(toc$children, function(x){
talk_type = x$title
lapply(x$children, function(y){
sub_type = y$title
lapply(y$children, function(z){
tibble(title = z$title)
}) %>%
bind_rows() %>%
mutate(sub_type = sub_type)
}) %>%
bind_rows() %>%
mutate(talk_type = talk_type,
pageNumber = map2((1:nrow(.)), talk_type, function(i, x){
switch(x,
"Invited speakers" = i + 18,
"Oral Presentation" = i + 25,
"Lightning Talks" = i + 151,
"Posters" = i + 166,
"Sponsor Session" = 244 + i)
}) %>% unlist,
pageBody = map2_chr(pageNumber, title, function(i, x){
pBody <- text[i+1] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_replace('^Chair:[^\\n]+\\n', '')}),
keywords = str_extract(pageBody %>% str_replace_all('\\n', ' '), '(?<=Keywords:).+$')
)
}) %>%
bind_rows
title_info
title_info$keywords
lapply(x$children, function(y){
sub_type = y$title
lapply(y$children, function(z){
tibble(title = z$title)
}) %>%
bind_rows() %>%
mutate(sub_type = sub_type)
}) %>%
bind_rows() %>%
mutate(talk_type = talk_type,
pageNumber = map2((1:nrow(.)), talk_type, function(i, x){
switch(x,
"Invited speakers" = i + 18,
"Oral Presentation" = i + 25,
"Lightning Talks" = i + 151,
"Posters" = i + 166,
"Sponsor Session" = 244 + i)
}) %>% unlist,
pageBody = map2_chr(pageNumber, title, function(i, x){
pBody <- text[i+1] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_replace('^Chair:[^\\n]+\\n', '')}),
keywords = str_extract(pageBody %>% str_replace_all('\\n', ' '), '(?<=Keywords:).+$') %>%
str_replace('\\- ', '') %>%
str_replace('\\d\\d\\d? $', '')
)
title_info <- lapply(toc$children, function(x){
talk_type = x$title
lapply(x$children, function(y){
sub_type = y$title
lapply(y$children, function(z){
tibble(title = z$title)
}) %>%
bind_rows() %>%
mutate(sub_type = sub_type)
}) %>%
bind_rows() %>%
mutate(talk_type = talk_type,
pageNumber = map2((1:nrow(.)), talk_type, function(i, x){
switch(x,
"Invited speakers" = i + 18,
"Oral Presentation" = i + 25,
"Lightning Talks" = i + 151,
"Posters" = i + 166,
"Sponsor Session" = 244 + i)
}) %>% unlist,
pageBody = map2_chr(pageNumber, title, function(i, x){
pBody <- text[i+1] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_replace('^Chair:[^\\n]+\\n', '')}),
keywords = str_extract(pageBody %>% str_replace_all('\\n', ' '), '(?<=Keywords:).+$') %>%
str_replace('\\- ', '') %>%
str_replace('\\d\\d\\d? $', '')
)
}) %>%
bind_rows
title_info$keywords
toc_authors <- text[4:18] %>%
str_replace('^[^\\n]+\\n', '') %>%
str_split('\\n') %>%
unlist() %>%
str_replace_all('( \\.)+', ' ')
toc_authors <- map2(title_info$pageNumber, title_info$title, function(i, x){
last_word <- str_replace_all(x, '[:punct:]', ' ') %>% str_split(' ') %>% unlist %>% .[length(.)]
toc_index <- (1:length(toc_authors))[str_detect(toc_authors, str_c(last_word, '\\s+', as.integer(i), '$'))]
if(!identical(toc_index, integer(0))){
toc_authors[toc_index + 1] %>% .[length(.)]
} else {
NA
}
})
title_info <- title_info %>% mutate(authors = toc_authors) %>% unnest()
title_info[71,]$authors <- 'Marvin Steijaert, Vladimir Chupakhin, Hugo Ceulemans, Joerg Wegner'
abstract_book_2015 <- title_info %>%
mutate(title_authors = str_split(authors, ',|\\band\\b|/|\\&')) %>%
unnest()
abstract_book_2015$title_authors
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;') %>%
unlist %>%
str_to_upper %>%
str_trim) %>%
unnest()
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;')) %>%
unnest()
abstract_book_2015$title_authors
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;')) %>%
unnest() %>%
mutate(title_authors = title_authors %>% str_trim %>% str_to_upper) %>%
mutate(talk_keywords = talk_keywords %>%
str_replace_all('- ', '') %>%
str_split(',') %>%
lapply(., function(x){x %>% str_trim %>% str_to_upper %>% .[. != '']})) %>%
unnest()
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;')) %>%
unnest() %>%
mutate(title_authors = title_authors %>% str_trim %>% str_to_upper) %>%
mutate(talk_keywords = keywords %>%
str_replace_all('- ', '') %>%
str_split(',') %>%
lapply(., function(x){x %>% str_trim %>% str_to_upper %>% .[. != '']})) %>%
unnest()
abstract_book_2015$title_authors
abstract_book_2015$talk_keywords
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;')) %>%
unnest() %>%
mutate(title_authors = title_authors %>% str_trim %>% str_to_upper) %>%
mutate(talk_keywords = keywords %>%
str_replace_all('- ', '') %>%
str_split(',') %>%
lapply(., function(x){x %>% str_trim %>% str_to_upper %>% .[. != '']})) %>%
unnest() %>%
mutate(talk_title = talk_title %>% stringi::stri_escape_unicode() %>% str_replace_all('\\\\u.{4}', '')) %>%
mutate(talk_body = talk_body %>% str_replace_all('\\n', ' ') %>% stringi::stri_escape_unicode() %>% str_replace_all('\\\\u.{4}', ' '))
title_info %>% names
abstract_book_2015 <- title_info %>%
mutate(title_authors = authors %>%
str_replace('‡|†', '') %>%
str_split(',|\\band\\b|/|\\&|;')) %>%
unnest() %>%
mutate(title_authors = title_authors %>% str_trim %>% str_to_upper) %>%
mutate(talk_keywords = keywords %>%
str_replace_all('- ', '') %>%
str_split(',') %>%
lapply(., function(x){x %>% str_trim %>% str_to_upper %>% .[. != '']})) %>%
unnest() %>%
mutate(talk_title = title %>% stringi::stri_escape_unicode() %>% str_replace_all('\\\\u.{4}', '')) %>%
mutate(talk_body = pageBody %>% str_replace_all('\\n', ' ') %>% stringi::stri_escape_unicode() %>% str_replace_all('\\\\u.{4}', ' '))
abstracts = abstract_book_2015 %>%
select(talk_title, talk_body, talk_type) %>%
distinct() %>%
rename(name = talk_title,
pageBody = talk_body,
abstractType = talk_type) %>%
mutate(nodeType = 'ABSTRACT')
author = abstract_book_2015 %>%
select(title_authors) %>%
distinct() %>%
rename(name = title_authors) %>%
mutate(nodeType = 'AUTHOR')
keywords = abstract_book_2015 %>%
select(talk_keywords) %>%
distinct() %>%
rename(name = talk_keywords) %>%
mutate(nodeType = 'KEYWORD')
node_list <- list(author, keywords, abstracts) %>% bind_rows %>% filter(name != '')
author_abstract = abstract_book_2015 %>%
select(talk_title, title_authors) %>%
distinct() %>%
select(source = title_authors,
target = talk_title) %>%
filter(!is.na(source),
!is.na(target)) %>%
mutate(type = 'WROTE')
abstract_keyword = abstract_book_2015 %>%
select(talk_title, talk_keywords) %>%
distinct() %>%
rename(source = talk_title,
target = talk_keywords) %>%
filter(!is.na(source),
!is.na(target)) %>%
mutate(type = 'CONTAINS')
edge_list <- rbind(author_abstract, abstract_keyword) %>%
filter(source != '',
target != '')
g2015 <- graph_from_data_frame(edge_list, T, node_list)
node_list %>% count(names)
node_list
node_list %>% count(name)
node_list %>% count(name, sort = T)
node_list %>% filter(name == 'The dendextend R package for manipulation, visualization and comparison of dendograms')
node_list %>% filter(name == 'The dendextend R package for manipulation, visualization and comparison of dendograms') %>% .$pageBody
node_list %>% filter(name == 'The dendextend R package for manipulation, visualization and comparison of dendograms') %>% .$pageBody %>% cat
node_list %>% filter(name == 'The dendextend R package for manipulation, visualization and comparison of dendograms') %>% .$pageBody
node_list %>% filter(name == 'The dendextend R package for manipulation, visualization and comparison of dendograms') %>% .$pageBody %>% {.[1] == .[2]}
abstracts = abstract_book_2015 %>%
select(talk_title, talk_body, talk_type) %>%
distinct() %>%
rename(name = talk_title,
pageBody = talk_body,
abstractType = talk_type) %>%
mutate(nodeType = 'ABSTRACT') %>%
group_by(name, nodeType, pageBody) %>%
summarize(abstractType = str_c(abstractType, collapse = '; '))
abstract %>% filter(name =='The dendextend R package for manipulation, visualization and comparison of dendograms')
abstracts %>% filter(name =='The dendextend R package for manipulation, visualization and comparison of dendograms')
abstracts %>% filter(name =='The dendextend R package for manipulation, visualization and comparison of dendograms') %>% .$abstractType
abstracts = abstract_book_2015 %>%
select(talk_title, talk_body, talk_type) %>%
distinct() %>%
rename(name = talk_title,
pageBody = talk_body,
abstractType = talk_type) %>%
mutate(nodeType = 'ABSTRACT') %>%
group_by(name, nodeType, pageBody) %>%
summarize(abstractType = str_c(abstractType, collapse = '; '))
author = abstract_book_2015 %>%
select(title_authors) %>%
distinct() %>%
rename(name = title_authors) %>%
mutate(nodeType = 'AUTHOR')
keywords = abstract_book_2015 %>%
select(talk_keywords) %>%
distinct() %>%
rename(name = talk_keywords) %>%
mutate(nodeType = 'KEYWORD')
node_list <- list(author, keywords, abstracts) %>% bind_rows %>% filter(name != '')
author_abstract = abstract_book_2015 %>%
select(talk_title, title_authors) %>%
distinct() %>%
select(source = title_authors,
target = talk_title) %>%
filter(!is.na(source),
!is.na(target)) %>%
mutate(type = 'WROTE')
abstract_keyword = abstract_book_2015 %>%
select(talk_title, talk_keywords) %>%
distinct() %>%
rename(source = talk_title,
target = talk_keywords) %>%
filter(!is.na(source),
!is.na(target)) %>%
mutate(type = 'CONTAINS')
edge_list <- rbind(author_abstract, abstract_keyword) %>%
filter(source != '',
target != '')
g2015 <- graph_from_data_frame(edge_list, T, node_list)
write_graph(g2015, 'data/g2015.graphml', 'graphml')
